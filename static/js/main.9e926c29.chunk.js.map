{"version":3,"sources":["components/common/WrapperForModal/styles.module.scss","components/EventComponent/styles.module.scss","components/common/DropDownComponent/styles.module.scss","components/common/Portal/styles.module.scss","components/common/Loader/styles.module.scss","components/common/Alert/styles.module.scss","components/common/CheckboxItem/styles.module.scss","containers/AddEventModal/styles.module.scss","containers/EditEventModal/styles.module.scss","components/common/Portal/index.js","components/common/WrapperForModal/index.js","components/common/Button/index.js","utils/dataStore.js","components/common/Loader/index.js","bus/auth/authSelectors.js","bus/auth/authTypes.js","bus/alert/alertTypes.js","bus/alert/alertActions.js","bus/users/usersSelectors.js","utils/helpers/transformData.js","utils/services/endpoints.js","utils/services/api.js","bus/users/usersTypes.js","bus/Modal/modalTypes.js","bus/Modal/modalActions.js","bus/Modal/modalSelectors.js","bus/alert/alertSelectors.js","components/common/Alert/index.js","containers/SignInContainer/index.js","bus/users/usersActions.js","bus/auth/authActions.js","bus/events/eventsTypes.js","bus/events/eventsActions.js","components/Navbar/index.js","utils/helpers/types.js","components/EventComponent/index.js","bus/events/eventsSelectors.js","components/Table/TableCell/index.js","components/Table/index.js","components/EventComponent/ConfirmModal.js","containers/MainScreen/index.js","hooks/useForm.js","utils/helpers/capitalizeFirstLetter.js","components/common/CheckboxItem/index.js","components/common/DropDownComponent/index.js","components/common/SelectFormGroup/index.js","components/common/TextInputGroup/index.js","containers/AddEventModal/validateForm.js","containers/AddEventModal/index.js","containers/EditEventModal/validateForm.js","containers/EditEventModal/index.js","navigation/Private.js","navigation/App.js","bus/events/eventsReducer.js","bus/auth/authReducer.js","bus/users/usersReducer.js","bus/Modal/modalReducer.js","core/rootReducer.js","bus/alert/alertReducer.js","core/store.js","index.js"],"names":["module","exports","Portal","children","className","el","useState","document","createElement","container","classList","add","useEffect","body","appendChild","setAttribute","styles","wrapper","style","overflow","removeChild","createPortal","propTypes","PropTypes","string","element","isRequired","WrapperForModal","title","wrapperHeader","wrapperChildren","Button","disabled","extraClassName","props","buttonStyle","useMemo","classNames","type","defaultProps","Loader","loader","role","isAdminSelector","state","auth","isAdmin","isAuthenticatedSelector","isAuthenticated","userSelector","user","LOGOUT","AUTH_USER","SET_AS_ADMIN","SHOW_ALERT","HIDE_ALERT","showAlert","alert","ms","dispatch","payload","setTimeout","usersSelector","users","loadingSelector","loading","errorSelector","error","TransformData","dataFromDataBase","meetings","forEach","item","data","trim","id","meeting","JSON","parse","push","formData","EVENTS","USERS","ENDPOINTS","apiService","baseUrl","endpoints","ApiService","isExist","instance","this","a","endpoint","axios","get","res","newData","params","stringify","config","headers","newParams","post","event","fieldId","owner","day","time","put","delete","GET_USERS_REQUEST","GET_USERS_SUCCESS","GET_USERS_FAIL","OPEN_MODAL","CLOSE_MODAL","openModal","closeModal","isOpenedSelector","modal","isOpened","modalIdSelector","modalId","alertSelector","Alert","useDispatch","useSelector","classnames","alertWrapper","message","aria-label","onClick","aria-hidden","SignInContainer","usersLoading","userInfo","setUserInfo","setAlert","getData","transformDataToMeeting","onSubmit","e","preventDefault","userFind","find","name","htmlFor","value","onChange","target","map","ADD_EVENT","GET_EVENTS_SUCCESS","DELETE_EVENT","UPDATE_EVENT","SET_CURRENT_EVENT","CLEAR_CURRENT_EVENT","CLEAR_EVENTS","EVENTS_REQUEST","EVENTS_FAIL","FILTER_EVENTS","FILTER_CLEAR","clearCurrentEvent","updateEvent","updateData","result","transformSingleItemToMeeting","success","Navbar","filterEvents","userItem","to","EVENT","EventComponent","eventDeleteHandler","eventEditHandler","alertHandler","useDrag","end","monitor","getDropResult","collect","isDragging","drag","opacity","ref","pointerEvents","days","i","hour","eventsSelector","events","currentEventSelector","currentEvent","filteredEventsSelector","filteredEvents","successSelector","TableCell","dragHandler","fieldMeta","globalEvents","useDrop","accept","canDrop","drop","isOver","background","Table","eventsToRender","findEvent","eventItem","DndProvider","backend","HTML5Backend","scope","substr","dayItem","substring","Math","random","ConfirmModal","removeData","deleteEvent","buttonsGroup","MainScreen","setEvent","getStore","setCurrentEvent","useForm","callback","validate","initialValues","participants","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","Object","keys","length","handleChange","Array","isArray","submitHandler","resetValues","onBlurHandler","str","charAt","toUpperCase","slice","setInitialValues","valuesObj","CheckboxItem","onChangeHandler","isChecked","setIsChecked","selectOptions","marginRight","DropDownCOmponent","onChangeCheckBoxHandler","isOpen","setIsOpen","counter","setCounter","marginBottom","selectWrapper","border","selectHeader","boxShadow","join","fontWeight","selectGroup","visibility","SelectFormGroup","optionsArr","label","onBlur","TextInputGroup","placeholder","validateForm","AddEventModal","submitted","setSubmitted","participantsArr","setParticipantsArr","newEvent","addData","DropDownComponent","prevState","newArr","filter","EditEventModal","Private","App","initialState","localStorage","getItem","rootReducer","combineReducers","action","sortMeetings","setItem","removeItem","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9e926c29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__1bz8V\",\"wrapperHeader\":\"styles_wrapperHeader__2zHJ7\",\"wrapperChildren\":\"styles_wrapperChildren__WOpTe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event\":\"styles_event__3LUDE\",\"deleteBtn\":\"styles_deleteBtn__NIlw9\",\"buttonsGroup\":\"styles_buttonsGroup__3H7KH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectWrapper\":\"styles_selectWrapper__3KLUH\",\"selectHeader\":\"styles_selectHeader__14z5s\",\"selectGroup\":\"styles_selectGroup__anAv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__1hiEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"styles_loader__2rzC-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertWrapper\":\"styles_alertWrapper__1DgRJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectOptions\":\"styles_selectOptions__1NOrB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsGroup\":\"styles_buttonsGroup__bfaP3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsGroup\":\"styles_buttonsGroup__2IkNa\"};","import { useEffect, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst Portal = ({ children, className = 'root-portal', el = 'div' }) => {\r\n  const [container] = useState(document.createElement(el));\r\n\r\n  container.classList.add(className);\r\n\r\n  useEffect(() => {\r\n    document.body.appendChild(container);\r\n    container.setAttribute('class', styles.wrapper);\r\n    document.body.style.overflow = 'hidden';\r\n\r\n    return () => {\r\n      document.body.removeChild(container);\r\n      document.body.style.overflow = 'auto';\r\n    };\r\n  }, [container]);\r\n  return createPortal(children, container);\r\n};\r\n\r\nPortal.propTypes = {\r\n  el: PropTypes.string,\r\n  className: PropTypes.string,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Portal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './styles.module.scss';\r\n\r\nconst WrapperForModal = ({ title, children }) => (\r\n  <div className={styles.wrapper}>\r\n    <div className={styles.wrapperHeader}>\r\n      <h3 className={styles.title}>{title}</h3>\r\n    </div>\r\n    <div className={styles.wrapperChildren}>{children}</div>\r\n  </div>\r\n);\r\n\r\nWrapperForModal.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default WrapperForModal;\r\n","import React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst Button = ({ title, disabled, extraClassName, ...props }) => {\r\n  const buttonStyle = useMemo(\r\n    () =>\r\n      // eslint-disable-next-line implicit-arrow-linebreak\r\n      classNames('btn', extraClassName, {\r\n        'btn-disabled': disabled,\r\n      }),\r\n    [disabled, extraClassName],\r\n  );\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      disabled={disabled}\r\n      className={buttonStyle}\r\n      // eslint-disable-next-line react/jsx-props-no-spreading\r\n      {...props}\r\n    >\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\nButton.propTypes = {\r\n  title: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  extraClassName: PropTypes.string,\r\n};\r\nButton.defaultProps = {\r\n  title: 'Button',\r\n  disabled: false,\r\n  extraClassName: 'btn',\r\n};\r\nexport default Button;\r\n","const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\r\nconst time = [];\r\nconst startMeetingsHour = 10;\r\nconst endMeetingsHour = 18;\r\nfor (let i = startMeetingsHour; i <= endMeetingsHour; i += 1) {\r\n  const hour = `${i}:00`;\r\n  time.push(hour);\r\n}\r\nexport { days, time };\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Loader = () => (\r\n  <div className={styles.loader}>\r\n    <div className=\"spinner-border text-primary \" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","export const isAdminSelector = (state) => state.auth.isAdmin;\r\nexport const isAuthenticatedSelector = (state) => state.auth.isAuthenticated;\r\nexport const userSelector = (state) => state.auth.user;\r\n","export const LOGOUT = 'LOGOUT';\r\nexport const AUTH_USER = 'AUTH_USER';\r\nexport const SET_AS_ADMIN = 'SET_AS_ADMIN';\r\n","export const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const HIDE_ALERT = 'HIDE_ALERT';\r\n","import { HIDE_ALERT, SHOW_ALERT } from './alertTypes';\r\n\r\nconst hideAlert = () => (dispatch) => dispatch({ type: HIDE_ALERT });\r\n\r\nconst showAlert = (alert, ms = 2000) => (dispatch) => {\r\n  dispatch({ type: SHOW_ALERT, payload: alert });\r\n\r\n  setTimeout(() => {\r\n    dispatch({ type: HIDE_ALERT });\r\n  }, ms);\r\n};\r\nexport { hideAlert, showAlert };\r\n","export const usersSelector = (state) => state.users.users;\r\nexport const loadingSelector = (state) => state.users.loading;\r\nexport const errorSelector = (state) => state.users.error;\r\n","export default class TransformData {\r\n  static transformDataToMeeting(dataFromDataBase) {\r\n    const meetings = [];\r\n    if (dataFromDataBase && dataFromDataBase !== null) {\r\n      dataFromDataBase.forEach((item) => {\r\n        if (item.data.trim() !== '') {\r\n          const { id } = item;\r\n          const meeting = JSON.parse(item.data);\r\n          meeting.id = id;\r\n          meetings.push(meeting);\r\n        }\r\n      });\r\n    }\r\n\r\n    return meetings;\r\n  }\r\n\r\n  static transformSingleItemToMeeting(formData) {\r\n    const { id } = formData;\r\n    const meeting = JSON.parse(formData.data);\r\n    meeting.id = id;\r\n    return meeting;\r\n  }\r\n}\r\n","export const EVENTS = 'events';\r\nexport const USERS = 'users';\r\n\r\nconst ENDPOINTS = {\r\n  [EVENTS]: '/events',\r\n  [USERS]: '/users',\r\n};\r\n\r\nexport default ENDPOINTS;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable consistent-return */\r\nimport axios from 'axios';\r\nimport ENDPOINTS, { EVENTS } from './endpoints';\r\n\r\nconst getConfig = () => ({\r\n  headers: {\r\n    'Content-type': 'application/json',\r\n  },\r\n});\r\n\r\nclass ApiService {\r\n  constructor(baseUrl, endpoints) {\r\n    if (ApiService.isExist) {\r\n      return ApiService.instance;\r\n    }\r\n    ApiService.instance = this;\r\n    ApiService.isExist = true;\r\n    this.endpoints = endpoints;\r\n    this.baseUrl = baseUrl;\r\n  }\r\n\r\n  async getData(endpoint = EVENTS) {\r\n    const res = await axios.get(`${this.baseUrl}${this.endpoints[endpoint]}`);\r\n    return res.data;\r\n  }\r\n\r\n  async addData(endpoint = EVENTS, newData, params) {\r\n    const formData = {\r\n      data: JSON.stringify(newData),\r\n    };\r\n    const config = getConfig();\r\n    const newParams = { ...params, config };\r\n    const res = await axios.post(\r\n      `${this.baseUrl}${this.endpoints[endpoint]}`,\r\n      formData,\r\n      newParams,\r\n    );\r\n    return res.data;\r\n  }\r\n\r\n  async updateData(endpoint = EVENTS, event, params) {\r\n    const formData = {\r\n      data: JSON.stringify({\r\n        fieldId: event.fieldId,\r\n        owner: event.owner,\r\n        title: event.title,\r\n        day: event.day,\r\n        time: event.time,\r\n      }),\r\n    };\r\n    const config = getConfig();\r\n    const newParams = { ...params, config };\r\n    const res = await axios.put(\r\n      `${this.baseUrl}${this.endpoints[endpoint]}/${event.id}`,\r\n      formData,\r\n      newParams,\r\n    );\r\n    return res.data;\r\n  }\r\n\r\n  async removeData(endpoint, event) {\r\n    await axios.delete(\r\n      `${this.baseUrl}${this.endpoints[endpoint]}/${event.id}`,\r\n    );\r\n  }\r\n}\r\n\r\nconst apiService = new ApiService(\r\n  'http://158.101.166.74:8080/api/data/igornep',\r\n  ENDPOINTS,\r\n);\r\n\r\nexport { apiService };\r\n","export const GET_USERS_REQUEST = 'GET_USERS_REQUEST';\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\r\nexport const GET_USERS_FAIL = 'GET_USERS_FAIL';\r\n","export const OPEN_MODAL = 'OPEN_MODAL';\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\r\n","import { OPEN_MODAL, CLOSE_MODAL } from './modalTypes';\r\n\r\nexport const openModal = (id) => (dispatch) => {\r\n  dispatch({ type: OPEN_MODAL, payload: id });\r\n};\r\nexport const closeModal = () => (dispatch) => {\r\n  dispatch({ type: CLOSE_MODAL });\r\n};\r\n","export const isOpenedSelector = (state) => state.modal.isOpened;\r\nexport const modalIdSelector = (state) => state.modal.modalId;\r\n","export const alertSelector = (state) => state.alert;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { alertSelector } from 'bus/alert/alertSelectors';\r\nimport { hideAlert } from 'bus/alert/alertActions';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Alert = () => {\r\n  const dispatch = useDispatch();\r\n  const alert = useSelector(alertSelector);\r\n\r\n  if (!alert) return null;\r\n\r\n  return (\r\n    <div className={classnames(styles.alertWrapper)}>\r\n      <div\r\n        className={`alert alert-${alert.type || 'secondary'} alert-dismissible`}\r\n      >\r\n        {' '}\r\n        {alert.message}\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          aria-label=\"Close\"\r\n          onClick={() => dispatch(hideAlert())}\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Portal from 'components/common/Portal';\r\nimport WrapperForModal from 'components/common/WrapperForModal';\r\nimport Button from 'components/common/Button';\r\nimport Loader from 'components/common/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isAuthenticatedSelector } from 'bus/auth/authSelectors';\r\nimport { authUser, setAsAdmin } from 'bus/auth/authActions';\r\nimport { showAlert } from 'bus/alert/alertActions';\r\nimport {\r\n  errorSelector,\r\n  loadingSelector,\r\n  usersSelector,\r\n} from 'bus/users/usersSelectors';\r\nimport { getUsers } from 'bus/users/usersActions';\r\nimport { closeModal, openModal } from 'bus/Modal/modalActions';\r\nimport { isOpenedSelector, modalIdSelector } from 'bus/Modal/modalSelectors';\r\nimport Alert from 'components/common/Alert';\r\n\r\nconst SignInContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(isAuthenticatedSelector);\r\n  const users = useSelector(usersSelector);\r\n  const usersLoading = useSelector(loadingSelector);\r\n  const error = useSelector(errorSelector);\r\n  const isOpened = useSelector(isOpenedSelector);\r\n  const modalId = useSelector(modalIdSelector);\r\n\r\n  const [userInfo, setUserInfo] = useState('');\r\n  const [alert, setAlert] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      dispatch(getUsers());\r\n      dispatch(openModal('js-signin'));\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      dispatch(showAlert({ message: error.message, type: 'danger' }));\r\n    }\r\n  }, [error]);\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (userInfo.trim() === '') {\r\n      // eslint-disable-next-line\r\n      setAlert('Authorization is required!');\r\n      setTimeout(() => setAlert(''), 1500);\r\n      return;\r\n    }\r\n    const userFind = users.find((user) => user.name === userInfo);\r\n    if (userFind.isAdmin) {\r\n      dispatch(setAsAdmin());\r\n    }\r\n    dispatch(authUser(userFind));\r\n    dispatch(closeModal());\r\n  };\r\n  return usersLoading ? (\r\n    <Loader />\r\n  ) : (\r\n    users && isOpened && modalId === 'js-signin' && (\r\n      <Portal>\r\n        <WrapperForModal title=\"Please Authorize\">\r\n          {error && <Alert />}\r\n          <form onSubmit={onSubmitHandler}>\r\n            <div className=\"form-group pb-2 \">\r\n              <label htmlFor=\"userInfo\">Authorize</label>\r\n              <select\r\n                className=\"form-control select \"\r\n                name=\"userInfo\"\r\n                id=\"userInfo\"\r\n                value={userInfo}\r\n                onChange={(e) => {\r\n                  setUserInfo(e.target.value);\r\n                }}\r\n              >\r\n                <option value=\"\">Choose Name</option>\r\n                {users.map((item) => (\r\n                  <option key={item.id} value={item.name}>\r\n                    {item.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {alert && <p className=\"text-danger p-0 m-0\">{alert}</p>}\r\n            </div>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              title=\"Authorize\"\r\n              className=\"btn btn-primary\"\r\n            />\r\n          </form>\r\n        </WrapperForModal>\r\n      </Portal>\r\n    )\r\n  );\r\n};\r\n\r\nexport default SignInContainer;\r\n","import TransformData from 'utils/helpers/transformData';\r\nimport { apiService } from 'utils/services/api';\r\nimport { USERS } from 'utils/services/endpoints';\r\nimport {\r\n  GET_USERS_REQUEST,\r\n  GET_USERS_FAIL,\r\n  GET_USERS_SUCCESS,\r\n} from './usersTypes';\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n  dispatch({ type: GET_USERS_REQUEST });\r\n  try {\r\n    const res = TransformData.transformDataToMeeting(\r\n      await apiService.getData(USERS),\r\n    );\r\n    dispatch({ type: GET_USERS_SUCCESS, payload: res });\r\n  } catch (error) {\r\n    dispatch({ type: GET_USERS_FAIL, payload: error });\r\n  }\r\n};\r\n","import { AUTH_USER, SET_AS_ADMIN, LOGOUT } from './authTypes';\r\n\r\nexport const authUser = (user) => (dispatch) => {\r\n  dispatch({ type: AUTH_USER, payload: user });\r\n};\r\n\r\nexport const setAsAdmin = () => (dispatch) => {\r\n  dispatch({ type: SET_AS_ADMIN });\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","export const ADD_EVENT = 'ADD_EVENT';\r\nexport const GET_EVENTS_SUCCESS = 'GET_EVENTS_SUCCESS';\r\nexport const DELETE_EVENT = 'DELETE_EVENT';\r\nexport const UPDATE_EVENT = 'UPDATE_EVENT';\r\nexport const SET_CURRENT_EVENT = 'SET_CURRENT_EVENT';\r\nexport const CLEAR_CURRENT_EVENT = 'CLEAR_CURRENT_EVENT';\r\nexport const CLEAR_EVENTS = 'CLEAR_EVENTS';\r\nexport const EVENTS_REQUEST = 'EVENTS_REQUEST';\r\nexport const EVENTS_FAIL = 'EVENTS_FAIL';\r\nexport const FILTER_EVENTS = 'FILTER_EVENTS';\r\nexport const FILTER_CLEAR = 'FILTER_CLEAR';\r\n","import TransformData from 'utils/helpers/transformData';\r\nimport { apiService } from 'utils/services/api';\r\nimport { EVENTS } from 'utils/services/endpoints';\r\nimport {\r\n  EVENTS_REQUEST,\r\n  EVENTS_FAIL,\r\n  ADD_EVENT,\r\n  GET_EVENTS_SUCCESS,\r\n  DELETE_EVENT,\r\n  UPDATE_EVENT,\r\n  FILTER_CLEAR,\r\n  FILTER_EVENTS,\r\n  SET_CURRENT_EVENT,\r\n  CLEAR_CURRENT_EVENT,\r\n  CLEAR_EVENTS,\r\n} from './eventsTypes';\r\n\r\nexport const addEvent = (event) => async (dispatch) => {\r\n  dispatch({ type: EVENTS_REQUEST });\r\n  try {\r\n    const result = TransformData.transformSingleItemToMeeting(\r\n      await apiService.addData(EVENTS, event),\r\n    );\r\n    dispatch({\r\n      type: ADD_EVENT,\r\n      payload: { success: 'Event well added!', event: result },\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: EVENTS_FAIL, payload: error });\r\n  }\r\n};\r\n\r\nexport const getEvents = () => async (dispatch, getStore) => {\r\n  dispatch({ type: EVENTS_REQUEST });\r\n\r\n  const { isAdmin, user } = getStore().auth;\r\n  try {\r\n    const res = TransformData.transformDataToMeeting(\r\n      await apiService.getData(EVENTS),\r\n    );\r\n\r\n    let events = [];\r\n    if (!isAdmin) {\r\n      res.forEach((event) => {\r\n        const userOwnEvent = event.owner.find((item) => item === user.name);\r\n        if (userOwnEvent) {\r\n          events.push(event);\r\n        }\r\n      });\r\n    } else {\r\n      events = res;\r\n    }\r\n\r\n    dispatch({\r\n      type: GET_EVENTS_SUCCESS,\r\n      payload: { success: 'Events well recieved!', events },\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: EVENTS_FAIL, payload: error });\r\n  }\r\n};\r\n\r\nexport const clearEvents = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_EVENTS });\r\n};\r\n\r\nexport const deleteEvent = (event) => async (dispatch) => {\r\n  dispatch({ type: EVENTS_REQUEST });\r\n  try {\r\n    await apiService.removeData(EVENTS, event);\r\n\r\n    dispatch({\r\n      type: DELETE_EVENT,\r\n      payload: { success: 'Event well deleted!', event },\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: EVENTS_FAIL, payload: error });\r\n  }\r\n};\r\n\r\nexport const setCurrentEvent = (event) => (dispatch) => {\r\n  dispatch({ type: SET_CURRENT_EVENT, payload: event });\r\n};\r\nexport const clearCurrentEvent = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_CURRENT_EVENT });\r\n};\r\n\r\nexport const updateEvent = (event) => async (dispatch) => {\r\n  dispatch({ type: EVENTS_REQUEST });\r\n  try {\r\n    const result = TransformData.transformSingleItemToMeeting(\r\n      await apiService.updateData(EVENTS, event),\r\n    );\r\n    dispatch({\r\n      type: UPDATE_EVENT,\r\n      payload: { success: 'Event well updated!', event: result },\r\n    });\r\n\r\n    // showAlert({ message: 'Events well updated!', type: 'success' });\r\n  } catch (error) {\r\n    dispatch({ type: EVENTS_FAIL, payload: error });\r\n  }\r\n};\r\nexport const filterEvents = (user) => (dispatch) => {\r\n  dispatch({ type: FILTER_EVENTS, payload: user });\r\n};\r\nexport const clearFilteredEvents = () => (dispatch) => {\r\n  dispatch({ type: FILTER_CLEAR });\r\n};\r\n","/* eslint-disable react/jsx-one-expression-per-line */\r\nimport Button from 'components/common/Button';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  filterEvents,\r\n  clearFilteredEvents,\r\n  clearEvents,\r\n} from 'bus/events/eventsActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  isAdminSelector,\r\n  isAuthenticatedSelector,\r\n  userSelector,\r\n} from 'bus/auth/authSelectors';\r\nimport { logout } from 'bus/auth/authActions';\r\nimport { usersSelector } from 'bus/users/usersSelectors';\r\nimport { openModal } from 'bus/Modal/modalActions';\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(isAuthenticatedSelector);\r\n  const isAdmin = useSelector(isAdminSelector);\r\n  const user = useSelector(userSelector);\r\n  const users = useSelector(usersSelector);\r\n\r\n  const logoutHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(clearEvents());\r\n    dispatch(logout());\r\n  };\r\n  const onChangeHandler = (e) => {\r\n    if (e.target.value.trim() === '') {\r\n      dispatch(clearFilteredEvents());\r\n\r\n      return;\r\n    }\r\n    dispatch(filterEvents(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg mb-3\">\r\n      <div className=\"container\">\r\n        <div className=\"navbar-brand\">\r\n          <i className=\"fa fa-calendar\" /> Calendar\r\n        </div>\r\n        <ul className=\"navbar-nav\">\r\n          {isAdmin && (\r\n            <>\r\n              <li className=\"nav-item\">\r\n                <Button\r\n                  extraClassName=\"btn-secondary py-2\"\r\n                  title=\"+ Add Event\"\r\n                  onClick={() => dispatch(openModal('js-create-event'))}\r\n                />\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <select\r\n                  className=\"form-select form-select-lg py-2\"\r\n                  onChange={onChangeHandler}\r\n                >\r\n                  <option value=\"\">All Participants</option>\r\n                  {users.map((userItem) => (\r\n                    <option key={userItem.id} value={userItem.name}>\r\n                      {userItem.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </li>\r\n            </>\r\n          )}\r\n\r\n          {isAuthenticated && (\r\n            <>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                  {' '}\r\n                  <i className=\"fa fa-user\" /> Hi,\r\n                  {user.name}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\" onClick={logoutHandler}>\r\n                  {' '}\r\n                  <i className=\"fa fa-sign-out\" /> Logout{' '}\r\n                </Link>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","export const EVENT = 'event';\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable operator-linebreak */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport { EVENT } from 'utils/helpers/types';\r\nimport styles from './styles.module.scss';\r\n\r\nconst EventComponent = ({\r\n  event,\r\n  isAdmin,\r\n  eventDeleteHandler,\r\n  eventEditHandler,\r\n  alertHandler,\r\n}) => {\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: EVENT,\r\n    item: {\r\n      id: event.id,\r\n      title: event.title,\r\n      fieldId: event.fieldId,\r\n      owner: event.owner,\r\n    },\r\n    end: (item, monitor) => {\r\n      const i = monitor.getDropResult();\r\n      if (i === null) {\r\n        alertHandler('Time slot is reserved!');\r\n      }\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const opacity = isDragging ? 0.4 : 1;\r\n  return (\r\n    <div\r\n      ref={drag}\r\n      style={\r\n        isAdmin\r\n          ? { ...opacity, pointerEvents: true }\r\n          : { ...opacity, pointerEvents: 'none' }\r\n      }\r\n      className={styles.event}\r\n    >\r\n      {event.title}\r\n      {isAdmin && (\r\n        <div>\r\n          <i\r\n            className=\"fa fa-pencil text-dark \"\r\n            onClick={() => eventEditHandler(event)}\r\n          />\r\n          <i\r\n            className=\"fa fa-times text-danger pl-2\"\r\n            onClick={() => eventDeleteHandler(event)}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventComponent;\r\n","export const eventsSelector = (state) => state.events.events;\r\nexport const currentEventSelector = (state) => state.events.currentEvent;\r\nexport const filteredEventsSelector = (state) => state.events.filteredEvents;\r\nexport const loadingSelector = (state) => state.events.loading;\r\nexport const errorSelector = (state) => state.events.error;\r\nexport const successSelector = (state) => state.events.success;\r\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\r\n/* eslint-disable no-alert */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport { EVENT } from 'utils/helpers/types';\r\n\r\nconst TableCell = ({\r\n  children,\r\n  dragHandler,\r\n  fieldMeta,\r\n  isAdmin,\r\n  globalEvents,\r\n}) => {\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: EVENT,\r\n    canDrop: () => {\r\n      const findEvent = globalEvents.find(\r\n        (event) => event.fieldId === fieldMeta.fieldId,\r\n      );\r\n\r\n      return !findEvent && isAdmin;\r\n    },\r\n    drop: (item, monitor) => {\r\n      dragHandler(item, monitor, fieldMeta);\r\n    },\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver(),\r\n      canDrop: !!monitor.canDrop(),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <td\r\n      ref={drop}\r\n      style={isOver ? { background: 'yellow' } : { background: '#fff' }}\r\n    >\r\n      {children}\r\n    </td>\r\n  );\r\n};\r\n\r\nexport default TableCell;\r\n","/* eslint-disable react/jsx-curly-newline */\r\n/* eslint-disable function-paren-newline */\r\n/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-lone-blocks */\r\n/* eslint-disable react/prop-types */\r\nimport React, { useEffect } from 'react';\r\nimport EventComponent from 'components/EventComponent';\r\nimport { days, time } from 'utils/dataStore';\r\nimport Loader from 'components/common/Loader';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { successSelector } from 'bus/events/eventsSelectors';\r\nimport TableCell from './TableCell';\r\n\r\nconst Table = ({\r\n  params: {\r\n    events,\r\n    updateEvent,\r\n    loading,\r\n    filteredEvents,\r\n    isAdmin,\r\n    eventDeleteHandler,\r\n    eventEditHandler,\r\n    showAlert,\r\n  },\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const success = useSelector(successSelector);\r\n  const alertHandler = (message) => {\r\n    dispatch(showAlert({ message, type: 'danger' }));\r\n  };\r\n  const eventsToRender = filteredEvents || events;\r\n\r\n  const dragHandler = (item, monitor, fieldMeta) => {\r\n    const findEvent = events.find(\r\n      (eventItem) => eventItem.fieldId === item.fieldId,\r\n    );\r\n    if (findEvent) {\r\n      findEvent.fieldId = fieldMeta.fieldId;\r\n      findEvent.time = fieldMeta.time;\r\n      findEvent.day = fieldMeta.day;\r\n    }\r\n    // eslint-disable-next-line no-unused-expressions\r\n    findEvent && dispatch(updateEvent(findEvent));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      dispatch(showAlert({ message: success.message, type: 'success' }));\r\n    }\r\n  }, [success]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : (\r\n    eventsToRender && (\r\n      <DndProvider backend={HTML5Backend}>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Time</th>\r\n              {days.map((day) => (\r\n                <th scope=\"col\" key={day}>\r\n                  {day.substr(0, 3)}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {time.map((hour) => (\r\n              <tr key={hour}>\r\n                <td>{hour}</td>\r\n                {days.map((dayItem) => (\r\n                  <TableCell\r\n                    key={Math.random() * 100}\r\n                    fieldMeta={{\r\n                      fieldId: `${dayItem}${hour.substring(0, 2)}`,\r\n                      time: hour,\r\n                      day: dayItem,\r\n                    }}\r\n                    // fieldId={`${dayItem}${hour.substring(0, 2)}`}\r\n                    dragHandler={dragHandler}\r\n                    events={eventsToRender}\r\n                    globalEvents={events}\r\n                    isAdmin={isAdmin}\r\n                  >\r\n                    {eventsToRender.map((event) => {\r\n                      if (\r\n                        event.fieldId === `${dayItem}${hour.substring(0, 2)}`\r\n                      ) {\r\n                        return (\r\n                          <EventComponent\r\n                            event={event}\r\n                            key={event.fieldId}\r\n                            isAdmin={isAdmin}\r\n                            eventDeleteHandler={eventDeleteHandler}\r\n                            eventEditHandler={eventEditHandler}\r\n                            alertHandler={alertHandler}\r\n                          />\r\n                        );\r\n                      }\r\n                      return null;\r\n                    })}\r\n                  </TableCell>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </DndProvider>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","/* eslint-disable react/prop-types */\r\nimport Button from 'components/common/Button';\r\nimport Portal from 'components/common/Portal';\r\nimport WrapperForModal from 'components/common/WrapperForModal';\r\nimport React from 'react';\r\nimport { deleteEvent } from 'bus/events/eventsActions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeModal } from 'bus/Modal/modalActions';\r\nimport styles from './styles.module.scss';\r\n\r\nconst ConfirmModal = ({ event }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(deleteEvent(event));\r\n    dispatch(closeModal());\r\n  };\r\n  return (\r\n    <Portal>\r\n      <WrapperForModal title=\"Are you sure?\">\r\n        <form onSubmit={submitHandler}>\r\n          <h5>\r\n            Delete &quot;\r\n            {event.title}\r\n            &quot; event?\r\n          </h5>\r\n          <div className={styles.buttonsGroup}>\r\n            <Button\r\n              title=\"Cancel\"\r\n              type=\"button\"\r\n              onClick={() => dispatch(closeModal())}\r\n              className=\"btn btn-secondary\"\r\n            />\r\n            <Button title=\"Yes\" type=\"submit\" className=\"btn btn-primary\" />\r\n          </div>\r\n        </form>\r\n      </WrapperForModal>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","/* eslint-disable no-unused-expressions */\r\n/* eslint-disable function-paren-newline */\r\n/* eslint-disable implicit-arrow-linebreak */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Table from 'components/Table';\r\nimport ConfirmModal from 'components/EventComponent/ConfirmModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getEvents,\r\n  updateEvent,\r\n  setCurrentEvent,\r\n} from 'bus/events/eventsActions';\r\nimport {\r\n  eventsSelector,\r\n  filteredEventsSelector,\r\n  loadingSelector,\r\n  successSelector,\r\n} from 'bus/events/eventsSelectors';\r\nimport {\r\n  isAdminSelector,\r\n  // userSelector\r\n} from 'bus/auth/authSelectors';\r\nimport { showAlert } from 'bus/alert/alertActions';\r\nimport { openModal } from 'bus/Modal/modalActions';\r\nimport { isOpenedSelector, modalIdSelector } from 'bus/Modal/modalSelectors';\r\n\r\nconst MainScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector(loadingSelector);\r\n  const events = useSelector(eventsSelector);\r\n  const filteredEvents = useSelector(filteredEventsSelector);\r\n  const isAdmin = useSelector(isAdminSelector);\r\n  const isOpened = useSelector(isOpenedSelector);\r\n  const modalId = useSelector(modalIdSelector);\r\n  const success = useSelector(successSelector);\r\n\r\n  const [event, setEvent] = useState({});\r\n  const eventDeleteHandler = (eventItem) => {\r\n    setEvent(eventItem);\r\n    dispatch(openModal(eventItem.id));\r\n  };\r\n  const eventEditHandler = (eventItem) => {\r\n    dispatch(setCurrentEvent(eventItem));\r\n    setEvent(eventItem);\r\n    dispatch(openModal('js-edit-modal'));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getEvents());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      dispatch(showAlert({ message: success, type: 'success' }));\r\n    }\r\n  }, [success]);\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        params={{\r\n          events,\r\n          updateEvent,\r\n          loading,\r\n          showAlert,\r\n          filteredEvents,\r\n          isAdmin,\r\n          eventDeleteHandler,\r\n          eventEditHandler,\r\n        }}\r\n      />\r\n      {isOpened && modalId === event.id && <ConfirmModal event={event} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n","import { useEffect, useState } from 'react';\r\nimport { capitalizeFirstLetter } from 'utils/helpers/capitalizeFirstLetter';\r\n\r\nconst useForm = (callback, validate) => {\r\n  const initialValues = {\r\n    event: '',\r\n    participants: [],\r\n    day: '',\r\n    time: '',\r\n  };\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    if (Array.isArray(e)) {\r\n      setValues({\r\n        ...values,\r\n        participants: e,\r\n      });\r\n    } else {\r\n      setValues({\r\n        ...values,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setInitialValues = (valuesObj) => {\r\n    setValues(valuesObj);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n  const resetValues = () => {\r\n    setIsSubmitting(false);\r\n    setValues(initialValues);\r\n    setErrors({});\r\n  };\r\n  const onBlurHandler = (e) => {\r\n    if (e.target.value.trim() === '') {\r\n      setErrors({\r\n        ...errors,\r\n        [e.target.name]: `${capitalizeFirstLetter(e.target.name)} is required!`,\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors]);\r\n  return {\r\n    handleChange,\r\n    submitHandler,\r\n    resetValues,\r\n    onBlurHandler,\r\n    setInitialValues,\r\n    errors,\r\n    values,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","/* eslint-disable implicit-arrow-linebreak */\r\nexport const capitalizeFirstLetter = (str) =>\r\n  str.charAt(0).toUpperCase() + str.slice(1);\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useState, useEffect } from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\nconst CheckboxItem = ({ user, onChangeHandler, values }) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (values.participants.length > 0) {\r\n      if (values.participants.find((item) => item === user.name)) {\r\n        setIsChecked(true);\r\n      }\r\n    }\r\n  }, [values]);\r\n\r\n  return (\r\n    <label htmlFor={user.id} key={user.id} className={styles.selectOptions}>\r\n      {user.name}\r\n      <input\r\n        type=\"checkbox\"\r\n        id={user.id}\r\n        value={isChecked}\r\n        // value={user}\r\n        // checked={isChecked}\r\n        onChange={() => {\r\n          onChangeHandler(user.name);\r\n          setIsChecked(!isChecked);\r\n        }}\r\n      />\r\n      {isChecked && (\r\n        <i className=\"fa fa-check \" style={{ marginRight: '0.5rem' }} />\r\n      )}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default CheckboxItem;\r\n","/* eslint-disable indent */\r\n/* eslint-disable operator-linebreak */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable react/prop-types */\r\nimport React, { useState } from 'react';\r\nimport classnames from 'classnames';\r\nimport CheckboxItem from 'components/common/CheckboxItem';\r\nimport styles from './styles.module.scss';\r\n\r\nconst DropDownCOmponent = ({\r\n  users,\r\n  onChangeCheckBoxHandler,\r\n  error,\r\n  values,\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [counter, setCounter] = useState(0);\r\n  return (\r\n    <div className=\"form-group\">\r\n      <p style={{ marginBottom: '0.2rem' }}>Participants</p>\r\n      <div\r\n        className={styles.selectWrapper}\r\n        style={\r\n          isOpen\r\n            ? {\r\n                border: '3px solid rgba(0,123,255, 0.3)',\r\n              }\r\n            : {\r\n                border: '3px solid transparent',\r\n              }\r\n        }\r\n      >\r\n        <div\r\n          className={classnames('form-control', styles.selectHeader)}\r\n          style={\r\n            isOpen\r\n              ? {\r\n                  border: '1px solid rgba(0,123,255, 0.9)',\r\n                  boxShadow: '0px 5px 5px rgba(0,123,255, 0.4)',\r\n                }\r\n              : {\r\n                  border: '1px solid #ced4da',\r\n                  boxShadow: 'none',\r\n                }\r\n          }\r\n          onClick={() => {\r\n            setIsOpen(!isOpen);\r\n            setCounter(counter + 1);\r\n          }}\r\n        >\r\n          {values.participants.length > 0\r\n            ? `${values.participants\r\n                .map((user) => user)\r\n                .join(',')\r\n                .substring(0, 25)}...`\r\n            : `${users\r\n                .map((user) => user.name)\r\n                .join(',')\r\n                .substring(0, 25)}...`}\r\n\r\n          <i className=\"fa fa-angle-down\" style={{ fontWeight: 'bold' }} />\r\n        </div>\r\n\r\n        <div\r\n          className={styles.selectGroup}\r\n          style={isOpen ? { visibility: 'visible' } : { visibility: 'hidden' }}\r\n        >\r\n          {users.map((user) => (\r\n            <CheckboxItem\r\n              key={user.id}\r\n              user={user}\r\n              onChangeHandler={onChangeCheckBoxHandler}\r\n              values={values}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {error && <small className=\"text-danger px-1 \">{error}</small>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDownCOmponent;\r\n","/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable react/require-default-props */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SelectFormGroup = ({\r\n  value,\r\n  handleChange,\r\n  onBlurHandler,\r\n  error,\r\n  optionsArr,\r\n  label,\r\n  name,\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor={name}>{label}</label>\r\n    <select\r\n      className=\"form-control select\"\r\n      name={name}\r\n      id={name}\r\n      value={value}\r\n      onChange={handleChange}\r\n      onBlur={(e) => onBlurHandler(e)}\r\n    >\r\n      <option value=\"\">Choose {label}</option>\r\n      {optionsArr.map((item) => (\r\n        <option value={item} key={item}>\r\n          {item}\r\n        </option>\r\n      ))}\r\n    </select>\r\n    {error && <small className=\"text-danger\">{error}</small>}\r\n  </div>\r\n);\r\n\r\nSelectFormGroup.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  onBlurHandler: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n\r\n  optionsArr: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default SelectFormGroup;\r\n","/* eslint-disable react/require-default-props */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  placeholder,\r\n  handleChange,\r\n  onBlurHandler,\r\n  error,\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor={name}>{label}</label>\r\n    <input\r\n      id={name}\r\n      name={name}\r\n      type={type}\r\n      className=\"form-control\"\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={handleChange}\r\n      onBlur={(e) => onBlurHandler(e)}\r\n    />\r\n    {error && <small className=\"text-danger\">{error}</small>}\r\n  </div>\r\n);\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  onBlurHandler: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: 'text',\r\n};\r\n\r\nexport default TextInputGroup;\r\n","const validateForm = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.event.trim()) {\r\n    errors.event = 'Event name is required!';\r\n  }\r\n\r\n  if (values.participants.length === 0) {\r\n    errors.participants = 'Participants field is required!';\r\n  }\r\n\r\n  if (!values.day.trim()) {\r\n    errors.day = 'Day is required!';\r\n  }\r\n  if (!values.time.trim()) {\r\n    errors.time = 'Time is required!';\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validateForm;\r\n","/* eslint-disable jsx-a11y/control-has-associated-label */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Portal from 'components/common/Portal';\r\nimport WrapperForModal from 'components/common/WrapperForModal';\r\nimport Button from 'components/common/Button';\r\nimport { days, time } from 'utils/dataStore';\r\nimport useForm from 'hooks/useForm';\r\nimport DropDownComponent from 'components/common/DropDownComponent';\r\nimport SelectFormGroup from 'components/common/SelectFormGroup';\r\nimport TextInputGroup from 'components/common/TextInputGroup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { eventsSelector } from 'bus/events/eventsSelectors';\r\nimport { addEvent } from 'bus/events/eventsActions';\r\nimport { usersSelector } from 'bus/users/usersSelectors';\r\nimport { closeModal } from 'bus/Modal/modalActions';\r\nimport { isOpenedSelector, modalIdSelector } from 'bus/Modal/modalSelectors';\r\nimport validateForm from './validateForm';\r\nimport styles from './styles.module.scss';\r\n\r\nconst AddEventModal = () => {\r\n  const dispatch = useDispatch();\r\n  const events = useSelector(eventsSelector);\r\n  const users = useSelector(usersSelector);\r\n  const isOpened = useSelector(isOpenedSelector);\r\n  const modalId = useSelector(modalIdSelector);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [participantsArr, setParticipantsArr] = useState([]);\r\n  const [alert, setAlert] = useState('');\r\n  const setSubmit = () => {\r\n    setSubmitted(true);\r\n  };\r\n  const {\r\n    values,\r\n    errors,\r\n    handleChange,\r\n    submitHandler,\r\n    resetValues,\r\n    onBlurHandler,\r\n  } = useForm(setSubmit, validateForm);\r\n\r\n  useEffect(() => {\r\n    if (submitted) {\r\n      const newEvent = {\r\n        fieldId: values.day + values.time.substring(0, 2),\r\n        owner: values.participants,\r\n        title: values.event,\r\n        day: values.day,\r\n        time: values.time,\r\n      };\r\n      const eventExist = events.find(\r\n        (item) => item.fieldId === newEvent.fieldId,\r\n      );\r\n      if (eventExist) {\r\n        setAlert('Time Slot Already Reserved!');\r\n        setTimeout(() => {\r\n          setAlert('');\r\n        }, 1500);\r\n        setSubmitted(false);\r\n      } else {\r\n        dispatch(addEvent(newEvent));\r\n        dispatch(closeModal());\r\n        resetValues();\r\n        setParticipantsArr([]);\r\n        setSubmitted(false);\r\n      }\r\n    }\r\n  }, [submitted]);\r\n  const onParticipantsChange = (data) => {\r\n    setParticipantsArr((prevState) => {\r\n      const userExists = prevState.find((item) => item === data);\r\n      if (userExists) {\r\n        const newArr = prevState.filter((item) => item !== data);\r\n        handleChange(newArr);\r\n        return newArr;\r\n      }\r\n      handleChange([...participantsArr, data]);\r\n      return [...prevState, data];\r\n    });\r\n  };\r\n\r\n  if (!isOpened) return null;\r\n\r\n  return (\r\n    isOpened &&\r\n    modalId === 'js-create-event' && (\r\n      <Portal>\r\n        <WrapperForModal title=\"Create New Event\">\r\n          <form className=\"form\" onSubmit={submitHandler}>\r\n            {alert && <p className=\"alert alert-danger\">{alert}</p>}\r\n\r\n            <TextInputGroup\r\n              label=\"Event Name\"\r\n              name=\"event\"\r\n              value={values.event}\r\n              placeholder=\"Event Name\"\r\n              handleChange={handleChange}\r\n              onBlurHandler={onBlurHandler}\r\n              error={errors.event}\r\n            />\r\n            <DropDownComponent\r\n              users={users}\r\n              values={values}\r\n              onChangeCheckBoxHandler={onParticipantsChange}\r\n              error={errors.participants}\r\n            />\r\n            <SelectFormGroup\r\n              value={values.day}\r\n              handleChange={handleChange}\r\n              onBlurHandler={onBlurHandler}\r\n              error={errors.day}\r\n              optionsArr={days}\r\n              label=\"Day\"\r\n              name=\"day\"\r\n            />\r\n            <SelectFormGroup\r\n              value={values.time}\r\n              handleChange={handleChange}\r\n              onBlurHandler={onBlurHandler}\r\n              error={errors.time}\r\n              optionsArr={time}\r\n              label=\"Time\"\r\n              name=\"time\"\r\n            />\r\n            <div className={styles.buttonsGroup}>\r\n              <Button\r\n                title=\"Cancel\"\r\n                extraClassName=\"btn-secondary\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  dispatch(closeModal());\r\n                  setParticipantsArr([]);\r\n                  resetValues();\r\n                }}\r\n              />\r\n              <Button\r\n                title=\"Submit\"\r\n                extraClassName=\"btn-primary\"\r\n                type=\"submit\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </WrapperForModal>\r\n      </Portal>\r\n    )\r\n  );\r\n};\r\n\r\nexport default AddEventModal;\r\n","const validateForm = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.event.trim()) {\r\n    errors.event = 'Event name is required!';\r\n  }\r\n\r\n  if (values.participants.length === 0) {\r\n    errors.participants = 'Participants field is required!';\r\n  }\r\n\r\n  if (!values.day.trim()) {\r\n    errors.day = 'Day is required!';\r\n  }\r\n  if (!values.time.trim()) {\r\n    errors.time = 'Time is required!';\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validateForm;\r\n","/* eslint-disable jsx-a11y/control-has-associated-label */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Portal from 'components/common/Portal';\r\nimport WrapperForModal from 'components/common/WrapperForModal';\r\nimport Button from 'components/common/Button';\r\nimport { days, time } from 'utils/dataStore';\r\nimport useForm from 'hooks/useForm';\r\nimport DropDownComponent from 'components/common/DropDownComponent';\r\nimport SelectFormGroup from 'components/common/SelectFormGroup';\r\nimport TextInputGroup from 'components/common/TextInputGroup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  currentEventSelector,\r\n  eventsSelector,\r\n} from 'bus/events/eventsSelectors';\r\nimport { clearCurrentEvent, updateEvent } from 'bus/events/eventsActions';\r\nimport { usersSelector } from 'bus/users/usersSelectors';\r\nimport { closeModal } from 'bus/Modal/modalActions';\r\nimport { isOpenedSelector, modalIdSelector } from 'bus/Modal/modalSelectors';\r\nimport validateForm from './validateForm';\r\nimport styles from './styles.module.scss';\r\n\r\nconst EditEventModal = () => {\r\n  const dispatch = useDispatch();\r\n  const events = useSelector(eventsSelector);\r\n  const users = useSelector(usersSelector);\r\n  const currentEvent = useSelector(currentEventSelector);\r\n  const isOpened = useSelector(isOpenedSelector);\r\n  const modalId = useSelector(modalIdSelector);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [participantsArr, setParticipantsArr] = useState([]);\r\n  const [alert, setAlert] = useState('');\r\n\r\n  const setSubmit = () => {\r\n    setSubmitted(true);\r\n  };\r\n  const {\r\n    values,\r\n    errors,\r\n    handleChange,\r\n    submitHandler,\r\n    resetValues,\r\n    onBlurHandler,\r\n    setInitialValues,\r\n  } = useForm(setSubmit, validateForm);\r\n\r\n  useEffect(() => {\r\n    if (currentEvent) {\r\n      const initialValues = {\r\n        event: currentEvent.title,\r\n        participants: currentEvent.owner,\r\n        day: currentEvent.day,\r\n        time: currentEvent.time,\r\n      };\r\n      setParticipantsArr(currentEvent.owner);\r\n      setInitialValues(initialValues);\r\n    }\r\n  }, [currentEvent]);\r\n\r\n  useEffect(() => {\r\n    if (submitted) {\r\n      const newEvent = {\r\n        fieldId: values.day + values.time.substring(0, 2),\r\n        owner: values.participants,\r\n        title: values.event,\r\n        time: values.time,\r\n        day: values.day,\r\n        id: currentEvent.id,\r\n      };\r\n      const eventExist = events.find(\r\n        (item) => item.fieldId === newEvent.fieldId && item.id !== newEvent.id,\r\n      );\r\n      if (eventExist) {\r\n        setAlert('Time Slot Already Reserved!');\r\n        setTimeout(() => {\r\n          setAlert('');\r\n        }, 1500);\r\n        setSubmitted(false);\r\n      } else {\r\n        dispatch(updateEvent(newEvent));\r\n        dispatch(closeModal());\r\n        resetValues();\r\n        setParticipantsArr([]);\r\n        setSubmitted(false);\r\n        dispatch(clearCurrentEvent());\r\n      }\r\n    }\r\n  }, [submitted]);\r\n  const onParticipantsChange = (data) => {\r\n    setParticipantsArr((prevState) => {\r\n      const userExists = prevState.find((item) => item === data);\r\n      if (userExists) {\r\n        const newArr = prevState.filter((item) => item !== data);\r\n        handleChange(newArr);\r\n        return newArr;\r\n      }\r\n      handleChange([...participantsArr, data]);\r\n      return [...prevState, data];\r\n    });\r\n  };\r\n\r\n  if (!isOpened) return null;\r\n\r\n  return (\r\n    isOpened &&\r\n    modalId === 'js-edit-modal' && (\r\n      <Portal>\r\n        <WrapperForModal title=\"Edit Event\">\r\n          <form className=\"form\" onSubmit={submitHandler}>\r\n            {alert && <p className=\"alert alert-danger\">{alert}</p>}\r\n\r\n            <TextInputGroup\r\n              label=\"Event Name\"\r\n              name=\"event\"\r\n              value={values.event}\r\n              placeholder=\"Event Name\"\r\n              handleChange={handleChange}\r\n              onBlurHandler={onBlurHandler}\r\n              error={errors.event}\r\n            />\r\n            <DropDownComponent\r\n              users={users}\r\n              values={values}\r\n              onChangeCheckBoxHandler={onParticipantsChange}\r\n              error={errors.participants}\r\n            />\r\n            <SelectFormGroup\r\n              value={values.day}\r\n              handleChange={handleChange}\r\n              onBlurHandler={onBlurHandler}\r\n              error={errors.day}\r\n              optionsArr={days}\r\n              label=\"Day\"\r\n              name=\"day\"\r\n            />\r\n            <SelectFormGroup\r\n              value={values.time}\r\n              handleChange={handleChange}\r\n              onBlurHandler={onBlurHandler}\r\n              error={errors.time}\r\n              optionsArr={time}\r\n              label=\"Time\"\r\n              name=\"time\"\r\n            />\r\n            <div className={styles.buttonsGroup}>\r\n              <Button\r\n                title=\"Cancel\"\r\n                extraClassName=\"btn-secondary\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  dispatch(closeModal());\r\n                  dispatch(clearCurrentEvent());\r\n                  setParticipantsArr([]);\r\n                  resetValues();\r\n                }}\r\n              />\r\n              <Button\r\n                title=\"Update\"\r\n                extraClassName=\"btn-primary\"\r\n                type=\"submit\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </WrapperForModal>\r\n      </Portal>\r\n    )\r\n  );\r\n};\r\n\r\nexport default EditEventModal;\r\n","import React from 'react';\r\nimport Navbar from 'components/Navbar';\r\nimport MainScreen from 'containers/MainScreen';\r\nimport AddEventModal from 'containers/AddEventModal';\r\nimport Alert from 'components/common/Alert';\r\nimport EditEventModal from 'containers/EditEventModal';\r\n\r\nconst Private = () => (\r\n  <>\r\n    <Navbar />\r\n    <div className=\"container\">\r\n      <Alert />\r\n      <MainScreen />\r\n      <AddEventModal />\r\n      <EditEventModal />\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default Private;\r\n","import React from 'react';\r\n// import Public from './Public';\r\nimport SignInContainer from 'containers/SignInContainer';\r\nimport { useSelector } from 'react-redux';\r\nimport { isAuthenticatedSelector } from 'bus/auth/authSelectors';\r\nimport Private from './Private';\r\n\r\nconst App = () => {\r\n  const isAuthenticated = useSelector(isAuthenticatedSelector);\r\n\r\n  return <>{isAuthenticated ? <Private /> : <SignInContainer />}</>;\r\n};\r\n\r\nexport default App;\r\n","/* eslint-disable function-paren-newline */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable implicit-arrow-linebreak */\r\nimport {\r\n  GET_EVENTS_SUCCESS,\r\n  EVENTS_REQUEST,\r\n  EVENTS_FAIL,\r\n  ADD_EVENT,\r\n  DELETE_EVENT,\r\n  UPDATE_EVENT,\r\n  FILTER_EVENTS,\r\n  FILTER_CLEAR,\r\n  SET_CURRENT_EVENT,\r\n  CLEAR_CURRENT_EVENT,\r\n  CLEAR_EVENTS,\r\n} from './eventsTypes';\r\n\r\nconst initialState = {\r\n  events: null,\r\n  currentEvent: null,\r\n  filteredEvents: null,\r\n  loading: false,\r\n  success: null,\r\n  error: null,\r\n};\r\n\r\nexport const eventsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case EVENTS_REQUEST:\r\n      return { ...state, loading: true, success: null, error: null };\r\n    case GET_EVENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        events: action.payload.events,\r\n        success: action.payload.success,\r\n      };\r\n    case ADD_EVENT:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, action.payload.event],\r\n        success: action.payload.success,\r\n        loading: false,\r\n      };\r\n    case SET_CURRENT_EVENT:\r\n      return {\r\n        ...state,\r\n        currentEvent: action.payload,\r\n      };\r\n    case CLEAR_CURRENT_EVENT:\r\n      return {\r\n        ...state,\r\n        currentEvent: null,\r\n      };\r\n    case CLEAR_EVENTS:\r\n      return {\r\n        ...state,\r\n        events: null,\r\n        filteredEvents: null,\r\n        currentEvent: null,\r\n      };\r\n    case DELETE_EVENT:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter(\r\n          (item) => item.id !== action.payload.event.id,\r\n        ),\r\n        filteredEvents:\r\n          state.filteredEvents &&\r\n          state.filteredEvents.filter(\r\n            (item) => item.id !== action.payload.event.id,\r\n          ),\r\n        success: action.payload.success,\r\n        loading: false,\r\n      };\r\n    case UPDATE_EVENT:\r\n      return {\r\n        ...state,\r\n        events: state.events.map((item) =>\r\n          item.id === action.payload.event.id ? action.payload.event : item,\r\n        ),\r\n        filteredEvents:\r\n          state.filteredEvents &&\r\n          state.filteredEvents.map((item) =>\r\n            item.id === action.payload.event.id ? action.payload.event : item,\r\n          ),\r\n        success: action.payload.success,\r\n        loading: false,\r\n      };\r\n    case EVENTS_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    case FILTER_EVENTS:\r\n      // eslint-disable-next-line no-case-declarations\r\n      const sortMeetings = [];\r\n      state.events.forEach((item) => {\r\n        const matchOwner = item.owner.find((el) => el === action.payload);\r\n        if (matchOwner) {\r\n          sortMeetings.push(item);\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        filteredEvents: [...sortMeetings],\r\n      };\r\n    case FILTER_CLEAR:\r\n      return {\r\n        ...state,\r\n        filteredEvents: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { AUTH_USER, LOGOUT, SET_AS_ADMIN } from './authTypes';\r\n\r\nconst initialState = {\r\n  isAuthenticated: localStorage.getItem('user'),\r\n  isAdmin: localStorage.getItem('admin'),\r\n  user: JSON.parse(localStorage.getItem('user')) || null,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_USER:\r\n      localStorage.setItem('user', JSON.stringify(action.payload));\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: action.payload,\r\n      };\r\n    case SET_AS_ADMIN:\r\n      localStorage.setItem('admin', JSON.stringify(true));\r\n      return {\r\n        ...state,\r\n        isAdmin: true,\r\n      };\r\n    case LOGOUT:\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('users');\r\n      localStorage.removeItem('admin', true);\r\n      return {\r\n        isAuthenticated: false,\r\n        isAdmin: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_USERS_REQUEST,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_FAIL,\r\n} from './usersTypes';\r\n\r\nconst initialState = {\r\n  users: JSON.parse(localStorage.getItem('users')) || [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case GET_USERS_SUCCESS:\r\n      localStorage.setItem('users', JSON.stringify(action.payload));\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: action.payload,\r\n      };\r\n    case GET_USERS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { OPEN_MODAL, CLOSE_MODAL } from './modalTypes';\r\n\r\nconst initialState = {\r\n  isOpened: false,\r\n  modalId: null,\r\n};\r\nexport const modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case OPEN_MODAL:\r\n      return {\r\n        isOpened: true,\r\n        modalId: action.payload,\r\n      };\r\n    case CLOSE_MODAL:\r\n      return {\r\n        isOpened: false,\r\n        modalId: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { eventsReducer } from 'bus/events/eventsReducer';\r\nimport { authReducer } from 'bus/auth/authReducer';\r\nimport { alertReducer } from 'bus/alert/alertReducer';\r\nimport { usersReducer } from 'bus/users/usersReducer';\r\nimport { modalReducer } from 'bus/Modal/modalReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  events: eventsReducer,\r\n  auth: authReducer,\r\n  alert: alertReducer,\r\n  users: usersReducer,\r\n  modal: modalReducer,\r\n});\r\n","import { SHOW_ALERT, HIDE_ALERT } from './alertTypes';\r\n\r\nexport const alertReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SHOW_ALERT:\r\n      return action.payload;\r\n    case HIDE_ALERT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/* eslint-disable operator-linebreak */\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport { rootReducer } from 'core/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n  : compose;\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(...middleware)),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'navigation/App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from 'core/store';\n\nimport 'assets/styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}